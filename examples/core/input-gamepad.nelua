--[[ This Source Code Form is subject to the terms of the Mozilla Public
     License, v. 2.0. If a copy of the MPL was not distributed with this
     file, You can obtain one at https://mozilla.org/MPL/2.0/. ]]

-- This code is based on the "input gamepad" example by raysan5, available at: https://www.raylib.com/examples.html

-- Note: unfortunately my controller doens't worked, so, I can't really test this

require 'raylib'

##[=[ cemit([[
// NOTE: Gamepad name ID depends on drivers and OS
#if defined(PLATFORM_RPI)
    #define XBOX360_NAME_ID     "Microsoft X-Box 360 pad"
    #define PS3_NAME_ID         "PLAYSTATION(R)3 Controller"
#else
    #define XBOX360_NAME_ID     "Xbox 360 Controller"
    #define PS3_NAME_ID         "PLAYSTATION(R)3 Controller"
#endif
]])
]=]

local XBOX360_NAME_ID: cstring <cimport, nodecl>
local PS3_NAME_ID: cstring <cimport, nodecl>

-- [ initialization [

local screenWidth: integer <comptime> = 800
local screenHeight: integer <comptime> = 450

Raylib.SetConfigFlags(ConfigFlag.MSAA_4X_HINT) -- set MSAA 4x hint before windows creation

Raylib.InitWindow(screenWidth, screenHeight, "Raylib [core] example - gamepad input")

local texPs3Pad: Texture2D = Raylib.LoadTexture("examples/resources/ps3.png")
local texXboxPad: Texture2D = Raylib.LoadTexture("examples/resources/xbox.png")

Raylib.SetTargetFPS(60) -- set our game to run at 60 frames-per-second
-- ] initialization ]

-- TODO: temporary hack
local function TextFormat_i(str: cstring, vl: cint): cstring
   local finalstring: cstring;
   ## cemit ('finalstring = TextFormat(str, vl);')
   return finalstring
end

local function TextFormat_s(str: cstring, vl: cstring): cstring
   local finalstring: cstring;
   ## cemit ('finalstring = TextFormat(str, vl);')
   return finalstring
end

local function TextFormat_if(str: cstring, vl1: cint, vl2: float32): cstring
   local finalstring: cstring;
   ## cemit ('finalstring = TextFormat(str, vl1, vl2);')
   return finalstring
end

-- main game loop
while not Raylib.WindowShouldClose() do -- detect window close button or ESC key
   Raylib.BeginDrawing()
      Raylib.ClearBackground(RaylibColors.Raywhite)

      if Raylib.IsGamepadAvailable(GamepadNumber.PLAYER1) then
         Raylib.DrawText(TextFormat_s("GP1: %s", Raylib.GetGamepadName(GamepadNumber.PLAYER1)), 10, 10, 10, RaylibColors.Black)

         if Raylib.IsGamepadName(GamepadNumber.PLAYER1, XBOX360_NAME_ID) then
            Raylib.DrawTexture(texXboxPad, 0, 0, RaylibColors.Darkgray)

            -- Draw buttons: xbox home
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.MIDDLE)           then Raylib.DrawCircle(394,  89,  19, RaylibColors.Red)   end

            -- draw buttons: basic
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.MIDDLE_RIGHT)     then Raylib.DrawCircle(436, 150,  9, RaylibColors.Red)    end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.MIDDLE_LEFT)      then Raylib.DrawCircle(352, 150,  9, RaylibColors.Red)    end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.RIGHT_FACE_LEFT)  then Raylib.DrawCircle(501, 151, 15, RaylibColors.Blue)   end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.RIGHT_FACE_DOWN)  then Raylib.DrawCircle(536, 187, 15, RaylibColors.Lime)   end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.RIGHT_FACE_RIGHT) then Raylib.DrawCircle(572, 151, 15, RaylibColors.Maroon) end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.RIGHT_FACE_UP)    then Raylib.DrawCircle(536, 115, 15, RaylibColors.Gold)   end

            -- Draw buttons: d-pad
            Raylib.DrawRectangle(317, 202, 19, 71, RaylibColors.Black)
            Raylib.DrawRectangle(293, 228, 69, 19, RaylibColors.Black)
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.LEFT_FACE_UP)    then Raylib.DrawRectangle(317     , 202     , 19, 26, RaylibColors.Red) end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.LEFT_FACE_DOWN)  then Raylib.DrawRectangle(317     , 202 + 45, 19, 26, RaylibColors.Red) end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.LEFT_FACE_LEFT)  then Raylib.DrawRectangle(292     , 228     , 25, 19, RaylibColors.Red) end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.LEFT_FACE_RIGHT) then Raylib.DrawRectangle(292 + 44, 228     , 26, 19, RaylibColors.Red) end

            -- Draw buttons: left-right back
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.LEFT_TRIGGER_1)  then Raylib.DrawCircle(259, 61, 20, RaylibColors.Red) end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.RIGHT_TRIGGER_1) then Raylib.DrawCircle(536, 61, 20, RaylibColors.Red) end

            -- Draw axis: left joystick
            Raylib.DrawCircle(259, 152, 39, RaylibColors.Black)
            Raylib.DrawCircle(259, 152, 34, RaylibColors.Lightgray)
            Raylib.DrawCircle(259 + Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, GamepadAxis.LEFT_X) * 20,
                              152 - Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, GamepadAxis.LEFT_Y) * 20, 25, RaylibColors.Black)

            -- Draw axis: right joystick
            Raylib.DrawCircle(461, 237, 38, RaylibColors.Black)
            Raylib.DrawCircle(461, 237, 33, RaylibColors.Lightgray)
            Raylib.DrawCircle(259 + Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, GamepadAxis.RIGHT_X) * 20,
                              152 - Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, GamepadAxis.RIGHT_Y) * 20, 25, RaylibColors.Black)

            -- Draw axis: left-right triggers
            Raylib.DrawRectangle(170, 30, 15, 70, RaylibColors.Gray)
            Raylib.DrawRectangle(604, 30, 15, 70, RaylibColors.Gray)
            Raylib.DrawRectangle(170, 30, 15, ((1 - Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, GamepadAxis.LEFT_TRIGGER)) / 2) * 70, RaylibColors.Red)
            Raylib.DrawRectangle(604, 30, 15, ((1 - Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, GamepadAxis.RIGHT_TRIGGER)) / 2) * 70, RaylibColors.Red)
         else
            Raylib.DrawTexture(texPs3Pad, 0, 0, RaylibColors.Darkgray);

            -- Draw buttons: ps
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.MIDDLE) then
               Raylib.DrawCircle(396, 222, 13, RaylibColors.Red)
            end

            -- Draw buttons: basic
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.MIDDLE_LEFT)      then Raylib.DrawRectangle(328, 170, 32, 13, RaylibColors.Red)                                                      end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.MIDDLE_RIGHT)     then Raylib.DrawTriangle((@Vector2){ 436, 168 }, (@Vector2){ 436, 185 }, (@Vector2){ 464, 177 }, RaylibColors.Red) end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.RIGHT_FACE_UP)    then Raylib.DrawCircle(557, 144, 13, RaylibColors.Lime)                                                            end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.RIGHT_FACE_RIGHT) then Raylib.DrawCircle(586, 173, 13, RaylibColors.Red)                                                             end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.RIGHT_FACE_DOWN)  then Raylib.DrawCircle(557, 203, 13, RaylibColors.Violet)                                                          end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.RIGHT_FACE_LEFT)  then Raylib.DrawCircle(527, 173, 13, RaylibColors.Pink)                                                            end

            -- Draw buttons: d-pad
            Raylib.DrawRectangle(225, 132, 24, 84, RaylibColors.Black);
            Raylib.DrawRectangle(195, 161, 84, 25, RaylibColors.Black);
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.LEFT_FACE_UP)    then Raylib.DrawRectangle(225, 132, 24, 29, RaylibColors.Red)      end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.LEFT_FACE_DOWN)  then Raylib.DrawRectangle(225, 132 + 54, 24, 30, RaylibColors.Red) end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.LEFT_FACE_LEFT)  then Raylib.DrawRectangle(195, 161, 30, 25, RaylibColors.Red)      end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.LEFT_FACE_RIGHT) then Raylib.DrawRectangle(195 + 54, 161, 30, 25, RaylibColors.Red) end

            -- Draw buttons: left-right back buttons
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.LEFT_TRIGGER_1)  then Raylib.DrawCircle(239, 82, 20, RaylibColors.Red) end
            if Raylib.IsGamepadButtonDown(GamepadNumber.PLAYER1, GamepadButton.RIGHT_TRIGGER_1) then Raylib.DrawCircle(557, 82, 20, RaylibColors.Red) end

            -- Draw axis: left joystick
            Raylib.DrawCircle(319, 255, 35, RaylibColors.Black);
            Raylib.DrawCircle(319, 255, 31, RaylibColors.Lightgray);
            Raylib.DrawCircle(319 + Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, GamepadAxis.LEFT_X)*20, 255 + Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, GamepadAxis.LEFT_Y) * 20, 25, RaylibColors.Black);

            -- Draw axis: right joystick
            Raylib.DrawCircle(475, 255, 35, RaylibColors.Black);
            Raylib.DrawCircle(475, 255, 31, RaylibColors.Lightgray);
            Raylib.DrawCircle(475 + Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, GamepadAxis.RIGHT_X) * 20, 255 + Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, GamepadAxis.RIGHT_Y) * 20, 25, RaylibColors.Black);

            -- Draw axis: left-right triggers
            Raylib.DrawRectangle(169, 48, 15, 70, RaylibColors.Gray);
            Raylib.DrawRectangle(611, 48, 15, 70, RaylibColors.Gray);
            Raylib.DrawRectangle(169, 48, 15, ((1 - Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, GamepadAxis.LEFT_TRIGGER)) / 2) * 70, RaylibColors.Red);
            Raylib.DrawRectangle(611, 48, 15, ((1 - Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, GamepadAxis.RIGHT_TRIGGER)) / 2) * 70, RaylibColors.Red);
         end

         Raylib.DrawText(TextFormat_i("DETECTED AXIS [%i]:", Raylib.GetGamepadAxisCount(GamepadNumber.PLAYER1)), 10, 50, 10, RaylibColors.Maroon)
         for i=0_i32, < Raylib.GetGamepadAxisCount(GamepadNumber.PLAYER1) do
            Raylib.DrawText(TextFormat_if("AXIS %i: %.02f", i, Raylib.GetGamepadAxisMovement(GamepadNumber.PLAYER1, i)), 20, 70 + 20*i, 10, RaylibColors.Darkgray)
         end

         if Raylib.GetGamepadButtonPressed() ~= -1 then
            Raylib.DrawText(TextFormat_i("DETECTED BUTTON: %i", Raylib.GetGamepadButtonPressed()), 10, 430, 10, RaylibColors.Red);
         else
            Raylib.DrawText("DETECTED BUTTON: NONE", 10, 430, 10, RaylibColors.Gray)
         end
      else
         Raylib.DrawText("GP1: NOT DETECTED", 10, 10, 10, RaylibColors.Gray)
         Raylib.DrawTexture(texXboxPad, 0, 0, RaylibColors.Lightgray)
      end

   Raylib.EndDrawing()
end

-- de-initialization
Raylib.UnloadTexture(texPs3Pad)
Raylib.UnloadTexture(texXboxPad)

Raylib.CloseWindow() -- close window and OpenGL context
