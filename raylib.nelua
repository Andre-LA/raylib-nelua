global Vector2: type <cimport, nodecl> = @record{
  x: float32,
  y: float32,
}

global Vector3: type <cimport, nodecl> = @record{
  x: float32,
  y: float32,
  z: float32,
}

global Vector4: type <cimport, nodecl> = @record{
  x: float32,
  y: float32,
  z: float32,
  w: float32,
}

global Matrix: type <cimport, nodecl> = @record{
  m0: float32, m4: float32, m8: float32, m12: float32,
  m1: float32, m5: float32, m9: float32, m13: float32,
  m2: float32, m6: float32, m10: float32, m14: float32,
  m3: float32, m7: float32, m11: float32, m15: float32,
}

global Color: type <cimport, nodecl> = @record{
  r: cuchar,
  g: cuchar,
  b: cuchar,
  a: cuchar,
}

global Rectangle: type <cimport, nodecl> = @record{
  x: float32,
  y: float32,
  width: float32,
  height: float32,
}

global Image: type <cimport, nodecl> = @record{
  data: pointer,
  width: cint,
  height: cint,
  mipmaps: cint,
  format: cint,
}

global Texture: type <cimport, nodecl> = @record{
  id: cuint,
  width: cint,
  height: cint,
  mipmaps: cint,
  format: cint,
}

global RenderTexture: type <cimport, nodecl> = @record{
  id: cuint,
  texture: Texture,
  depth: Texture,
}

global NPatchInfo: type <cimport, nodecl> = @record{
  source: Rectangle,
  left: cint,
  top: cint,
  right: cint,
  bottom: cint,
  layout: cint,
}

global CharInfo: type <cimport, nodecl> = @record{
  value: cint,
  offsetX: cint,
  offsetY: cint,
  advanceX: cint,
  image: Image,
}

global Font: type <cimport, nodecl> = @record{
  baseSize: cint,
  charsCount: cint,
  charsPadding: cint,
  texture: Texture2D,
  recs: *Rectangle,
  chars: *CharInfo,
}

global Camera3D: type <cimport, nodecl> = @record{
  position: Vector3,
  target: Vector3,
  up: Vector3,
  fovy: float32,
  projection: cint,
}

global Camera2D: type <cimport, nodecl> = @record{
  offset: Vector2,
  target: Vector2,
  rotation: float32,
  zoom: float32,
}

global Mesh: type <cimport, nodecl> = @record{
  vertexCount: cint,
  triangleCount: cint,
  vertices: *float32,
  texcoords: *float32,
  texcoords2: *float32,
  normals: *float32,
  tangents: *float32,
  colors: *cuchar,
  indices: *cushort,
  animVertices: *float32,
  animNormals: *float32,
  boneIds: *cint,
  boneWeights: *float32,
  vaoId: cuint,
  vboId: *cuint,
}

global Shader: type <cimport, nodecl> = @record{
  id: cuint,
  locs: *cint,
}

global MaterialMap: type <cimport, nodecl> = @record{
  texture: Texture2D,
  color: Color,
  value: float32,
}

global Material: type <cimport, nodecl> = @record{
  shader: Shader,
  maps: *MaterialMap,
  params: float32,
}

global Transform: type <cimport, nodecl> = @record{
  translation: Vector3,
  rotation: Quaternion,
  scale: Vector3,
}

global BoneInfo: type <cimport, nodecl> = @record{
  name: cchar,
  parent: cint,
}

global Model: type <cimport, nodecl> = @record{
  transform: Matrix,
  meshCount: cint,
  materialCount: cint,
  meshes: *Mesh,
  materials: *Material,
  meshMaterial: *cint,
  boneCount: cint,
  bones: *BoneInfo,
  bindPose: *Transform,
}

global ModelAnimation: type <cimport, nodecl> = @record{
  boneCount: cint,
  frameCount: cint,
  bones: *BoneInfo,
  framePoses: **Transform,
}

global Ray: type <cimport, nodecl> = @record{
  position: Vector3,
  direction: Vector3,
}

global RayHitInfo: type <cimport, nodecl> = @record{
  hit: boolean,
  distance: float32,
  position: Vector3,
  normal: Vector3,
}

global BoundingBox: type <cimport, nodecl> = @record{
  min: Vector3,
  max: Vector3,
}

global Wave: type <cimport, nodecl> = @record{
  sampleCount: cuint,
  sampleRate: cuint,
  sampleSize: cuint,
  channels: cuint,
  data: pointer,
}

global rAudioBuffer: type <cimport, nodecl> = @record{

}

global AudioStream: type <cimport, nodecl> = @record{
  buffer: *rAudioBuffer,
  sampleRate: cuint,
  sampleSize: cuint,
  channels: cuint,
}

global Sound: type <cimport, nodecl> = @record{
  stream: AudioStream,
  sampleCount: cuint,
}

global Music: type <cimport, nodecl> = @record{
  stream: AudioStream,
  sampleCount: cuint,
  looping: boolean,
  ctxType: cint,
  ctxData: pointer,
}

global VrDeviceInfo: type <cimport, nodecl> = @record{
  hResolution: cint,
  vResolution: cint,
  hScreenSize: float32,
  vScreenSize: float32,
  vScreenCenter: float32,
  eyeToScreenDistance: float32,
  lensSeparationDistance: float32,
  interpupillaryDistance: float32,
  lensDistortionValues: float32,
  chromaAbCorrection: float32,
}

global VrStereoConfig: type <cimport, nodecl> = @record{
  projection: Matrix,
  viewOffset: Matrix,
  leftLensCenter: float32,
  rightLensCenter: float32,
  leftScreenCenter: float32,
  rightScreenCenter: float32,
  scale: float32,
  scaleIn: float32,
}

global ConfigFlags = @enum{
  FLAG_VSYNC_HINT = 0x00000040,
  FLAG_FULLSCREEN_MODE = 0x00000002,
  FLAG_WINDOW_RESIZABLE = 0x00000004,
  FLAG_WINDOW_UNDECORATED = 0x00000008,
  FLAG_WINDOW_HIDDEN = 0x00000080,
  FLAG_WINDOW_MINIMIZED = 0x00000200,
  FLAG_WINDOW_MAXIMIZED = 0x00000400,
  FLAG_WINDOW_UNFOCUSED = 0x00000800,
  FLAG_WINDOW_TOPMOST = 0x00001000,
  FLAG_WINDOW_ALWAYS_RUN = 0x00000100,
  FLAG_WINDOW_TRANSPARENT = 0x00000010,
  FLAG_WINDOW_HIGHDPI = 0x00002000,
  FLAG_MSAA_4X_HINT = 0x00000020,
  FLAG_INTERLACED_HINT = 0x00010000,
}

global TraceLogLevel = @enum{
  LOG_ALL = 0,
  LOG_TRACE,
  LOG_DEBUG,
  LOG_INFO,
  LOG_WARNING,
  LOG_ERROR,
  LOG_FATAL,
  LOG_NONE,
}

global KeyboardKey = @enum{
  KEY_NULL = 0,
  KEY_APOSTROPHE = 39,
  KEY_COMMA = 44,
  KEY_MINUS = 45,
  KEY_PERIOD = 46,
  KEY_SLASH = 47,
  KEY_ZERO = 48,
  KEY_ONE = 49,
  KEY_TWO = 50,
  KEY_THREE = 51,
  KEY_FOUR = 52,
  KEY_FIVE = 53,
  KEY_SIX = 54,
  KEY_SEVEN = 55,
  KEY_EIGHT = 56,
  KEY_NINE = 57,
  KEY_SEMICOLON = 59,
  KEY_EQUAL = 61,
  KEY_A = 65,
  KEY_B = 66,
  KEY_C = 67,
  KEY_D = 68,
  KEY_E = 69,
  KEY_F = 70,
  KEY_G = 71,
  KEY_H = 72,
  KEY_I = 73,
  KEY_J = 74,
  KEY_K = 75,
  KEY_L = 76,
  KEY_M = 77,
  KEY_N = 78,
  KEY_O = 79,
  KEY_P = 80,
  KEY_Q = 81,
  KEY_R = 82,
  KEY_S = 83,
  KEY_T = 84,
  KEY_U = 85,
  KEY_V = 86,
  KEY_W = 87,
  KEY_X = 88,
  KEY_Y = 89,
  KEY_Z = 90,
  KEY_SPACE = 32,
  KEY_ESCAPE = 256,
  KEY_ENTER = 257,
  KEY_TAB = 258,
  KEY_BACKSPACE = 259,
  KEY_INSERT = 260,
  KEY_DELETE = 261,
  KEY_RIGHT = 262,
  KEY_LEFT = 263,
  KEY_DOWN = 264,
  KEY_UP = 265,
  KEY_PAGE_UP = 266,
  KEY_PAGE_DOWN = 267,
  KEY_HOME = 268,
  KEY_END = 269,
  KEY_CAPS_LOCK = 280,
  KEY_SCROLL_LOCK = 281,
  KEY_NUM_LOCK = 282,
  KEY_PRINT_SCREEN = 283,
  KEY_PAUSE = 284,
  KEY_F1 = 290,
  KEY_F2 = 291,
  KEY_F3 = 292,
  KEY_F4 = 293,
  KEY_F5 = 294,
  KEY_F6 = 295,
  KEY_F7 = 296,
  KEY_F8 = 297,
  KEY_F9 = 298,
  KEY_F10 = 299,
  KEY_F11 = 300,
  KEY_F12 = 301,
  KEY_LEFT_SHIFT = 340,
  KEY_LEFT_CONTROL = 341,
  KEY_LEFT_ALT = 342,
  KEY_LEFT_SUPER = 343,
  KEY_RIGHT_SHIFT = 344,
  KEY_RIGHT_CONTROL = 345,
  KEY_RIGHT_ALT = 346,
  KEY_RIGHT_SUPER = 347,
  KEY_KB_MENU = 348,
  KEY_LEFT_BRACKET = 91,
  KEY_BACKSLASH = 92,
  KEY_RIGHT_BRACKET = 93,
  KEY_GRAVE = 96,
  KEY_KP_0 = 320,
  KEY_KP_1 = 321,
  KEY_KP_2 = 322,
  KEY_KP_3 = 323,
  KEY_KP_4 = 324,
  KEY_KP_5 = 325,
  KEY_KP_6 = 326,
  KEY_KP_7 = 327,
  KEY_KP_8 = 328,
  KEY_KP_9 = 329,
  KEY_KP_DECIMAL = 330,
  KEY_KP_DIVIDE = 331,
  KEY_KP_MULTIPLY = 332,
  KEY_KP_SUBTRACT = 333,
  KEY_KP_ADD = 334,
  KEY_KP_ENTER = 335,
  KEY_KP_EQUAL = 336,
  KEY_BACK = 4,
  KEY_MENU = 82,
  KEY_VOLUME_UP = 24,
  KEY_VOLUME_DOWN = 25,
}

global MouseButton = @enum{
  MOUSE_LEFT_BUTTON = 0,
  MOUSE_RIGHT_BUTTON = 1,
  MOUSE_MIDDLE_BUTTON = 2,
}

global MouseCursor = @enum{
  MOUSE_CURSOR_DEFAULT = 0,
  MOUSE_CURSOR_ARROW = 1,
  MOUSE_CURSOR_IBEAM = 2,
  MOUSE_CURSOR_CROSSHAIR = 3,
  MOUSE_CURSOR_POINTING_HAND = 4,
  MOUSE_CURSOR_RESIZE_EW = 5,
  MOUSE_CURSOR_RESIZE_NS = 6,
  MOUSE_CURSOR_RESIZE_NWSE = 7,
  MOUSE_CURSOR_RESIZE_NESW = 8,
  MOUSE_CURSOR_RESIZE_ALL = 9,
  MOUSE_CURSOR_NOT_ALLOWED = 10,
}

global GamepadButton = @enum{
  GAMEPAD_BUTTON_UNKNOWN = 0,
  GAMEPAD_BUTTON_LEFT_FACE_UP,
  GAMEPAD_BUTTON_LEFT_FACE_RIGHT,
  GAMEPAD_BUTTON_LEFT_FACE_DOWN,
  GAMEPAD_BUTTON_LEFT_FACE_LEFT,
  GAMEPAD_BUTTON_RIGHT_FACE_UP,
  GAMEPAD_BUTTON_RIGHT_FACE_RIGHT,
  GAMEPAD_BUTTON_RIGHT_FACE_DOWN,
  GAMEPAD_BUTTON_RIGHT_FACE_LEFT,
  GAMEPAD_BUTTON_LEFT_TRIGGER_1,
  GAMEPAD_BUTTON_LEFT_TRIGGER_2,
  GAMEPAD_BUTTON_RIGHT_TRIGGER_1,
  GAMEPAD_BUTTON_RIGHT_TRIGGER_2,
  GAMEPAD_BUTTON_MIDDLE_LEFT,
  GAMEPAD_BUTTON_MIDDLE,
  GAMEPAD_BUTTON_MIDDLE_RIGHT,
  GAMEPAD_BUTTON_LEFT_THUMB,
  GAMEPAD_BUTTON_RIGHT_THUMB,
}

global GamepadAxis = @enum{
  GAMEPAD_AXIS_LEFT_X = 0,
  GAMEPAD_AXIS_LEFT_Y = 1,
  GAMEPAD_AXIS_RIGHT_X = 2,
  GAMEPAD_AXIS_RIGHT_Y = 3,
  GAMEPAD_AXIS_LEFT_TRIGGER = 4,
  GAMEPAD_AXIS_RIGHT_TRIGGER = 5,
}

global MaterialMapIndex = @enum{
  MATERIAL_MAP_ALBEDO = 0,
  MATERIAL_MAP_METALNESS = 1,
  MATERIAL_MAP_NORMAL = 2,
  MATERIAL_MAP_ROUGHNESS = 3,
  MATERIAL_MAP_OCCLUSION,
  MATERIAL_MAP_EMISSION,
  MATERIAL_MAP_HEIGHT,
  MATERIAL_MAP_BRDG,
  MATERIAL_MAP_CUBEMAP,
  MATERIAL_MAP_IRRADIANCE,
  MATERIAL_MAP_PREFILTER,
}

global ShaderLocationIndex = @enum{
  SHADER_LOC_VERTEX_POSITION = 0,
  SHADER_LOC_VERTEX_TEXCOORD01,
  SHADER_LOC_VERTEX_TEXCOORD02,
  SHADER_LOC_VERTEX_NORMAL,
  SHADER_LOC_VERTEX_TANGENT,
  SHADER_LOC_VERTEX_COLOR,
  SHADER_LOC_MATRIX_MVP,
  SHADER_LOC_MATRIX_VIEW,
  SHADER_LOC_MATRIX_PROJECTION,
  SHADER_LOC_MATRIX_MODEL,
  SHADER_LOC_MATRIX_NORMAL,
  SHADER_LOC_VECTOR_VIEW,
  SHADER_LOC_COLOR_DIFFUSE,
  SHADER_LOC_COLOR_SPECULAR,
  SHADER_LOC_COLOR_AMBIENT,
  SHADER_LOC_MAP_ALBEDO,
  SHADER_LOC_MAP_METALNESS,
  SHADER_LOC_MAP_NORMAL,
  SHADER_LOC_MAP_ROUGHNESS,
  SHADER_LOC_MAP_OCCLUSION,
  SHADER_LOC_MAP_EMISSION,
  SHADER_LOC_MAP_HEIGHT,
  SHADER_LOC_MAP_CUBEMAP,
  SHADER_LOC_MAP_IRRADIANCE,
  SHADER_LOC_MAP_PREFILTER,
  SHADER_LOC_MAP_BRDF,
}

global ShaderUniformDataType = @enum{
  SHADER_UNIFORM_FLOAT = 0,
  SHADER_UNIFORM_VEC2,
  SHADER_UNIFORM_VEC3,
  SHADER_UNIFORM_VEC4,
  SHADER_UNIFORM_INT,
  SHADER_UNIFORM_IVEC2,
  SHADER_UNIFORM_IVEC3,
  SHADER_UNIFORM_IVEC4,
  SHADER_UNIFORM_SAMPLER2D,
}

global PixelFormat = @enum{
  PIXELFORMAT_UNCOMPRESSED_GRAYSCALE = 1,
  PIXELFORMAT_UNCOMPRESSED_GRAY_ALPHA,
  PIXELFORMAT_UNCOMPRESSED_R5G6B5,
  PIXELFORMAT_UNCOMPRESSED_R8G8B8,
  PIXELFORMAT_UNCOMPRESSED_R5G5B5A1,
  PIXELFORMAT_UNCOMPRESSED_R4G4B4A4,
  PIXELFORMAT_PIXELFORMAT_UNCOMPRESSED_R8G8B8A8,
  PIXELFORMAT_UNCOMPRESSED_R32,
  PIXELFORMAT_UNCOMPRESSED_R32G32B32,
  PIXELFORMAT_UNCOMPRESSED_R32G32B32A32,
  PIXELFORMAT_COMPRESSED_DXT1_RGB,
  PIXELFORMAT_COMPRESSED_DXT1_RGBA,
  PIXELFORMAT_COMPRESSED_DXT3_RGBA,
  PIXELFORMAT_COMPRESSED_DXT5_RGBA,
  PIXELFORMAT_COMPRESSED_ETC1_RGB,
  PIXELFORMAT_COMPRESSED_ETC2_RGB,
  PIXELFORMAT_COMPRESSED_ETC2_EAC_RGBA,
  PIXELFORMAT_COMPRESSED_PVRT_RGB,
  PIXELFORMAT_COMPRESSED_PVRT_RGBA,
  PIXELFORMAT_COMPRESSED_ASTC_4x4_RGBA,
  PIXELFORMAT_COMPRESSED_ASTC_8x8_RGBA,
}

global TextureFilter = @enum{
  TEXTURE_FILTER_POINT = 0,
  TEXTURE_FILTER_BILINEAR,
  TEXTURE_FILTER_TRILINEAR,
  TEXTURE_FILTER_ANISOTROPIC_4X,
  TEXTURE_FILTER_ANISOTROPIC_8X,
  TEXTURE_FILTER_ANISOTROPIC_16X,
}

global TextureWrap = @enum{
  TEXTURE_WRAP_REPEAT = 0,
  TEXTURE_WRAP_CLAMP,
  TEXTURE_WRAP_MIRROR_REPEAT,
  TEXTURE_WRAP_MIRROR_CLAMP,
}

global CubemapLayout = @enum{
  CUBEMAP_LAYOUT_AUTO_DETECT = 0,
  CUBEMAP_LAYOUT_LINE_VERTICAL,
  CUBEMAP_LAYOUT_LINE_HORIZONTAL,
  CUBEMAP_LAYOUT_CROSS_THREE_BY_FOUR,
  CUBEMAP_LAYOUT_CROSS_FOUR_BY_THREE,
  CUBEMAP_LAYOUT_PANORAMA,
}

global FontType = @enum{
  FONT_DEFAULT = 0,
  FONT_BITMAP,
  FONT_SDF,
}

global BlendMode = @enum{
  BLEND_ALPHA = 0,
  BLEND_ADDITIVE,
  BLEND_MULTIPLIED,
  BLEND_ADD_COLORS,
  BLEND_SUBTRACT_COLORS,
  BLEND_CUSTOM,
}

global Gestures = @enum{
  GESTURE_NONE = 0,
  GESTURE_TAP = 1,
  GESTURE_DOUBLETAP = 2,
  GESTURE_HOLD = 4,
  GESTURE_DRAG = 8,
  GESTURE_SWIPE_RIGHT = 16,
  GESTURE_SWIPE_LEFT = 32,
  GESTURE_SWIPE_UP = 64,
  GESTURE_SWIPE_DOWN = 128,
  GESTURE_PINCH_IN = 256,
  GESTURE_PINCH_OUT = 512,
}

global CameraMode = @enum{
  CAMERA_CUSTOM = 0,
  CAMERA_FREE,
  CAMERA_ORBITAL,
  CAMERA_FIRST_PERSON,
  CAMERA_THIRD_PERSON,
}

global CameraProjection = @enum{
  CAMERA_PERSPECTIVE = 0,
  CAMERA_ORTHOGRAPHIC,
}

global NPatchLayout = @enum{
  NPATCH_NINE_PATCH = 0,
  NPATCH_THREE_PATCH_VERTICAL,
  NPATCH_THREE_PATCH_HORIZONTAL,
}
